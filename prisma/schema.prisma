generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL") // Ensure this is "DATABASE_URL" in your .env file
}

enum ProductCategory {
  ANKARA
  JEWELRY
  READY_TO_WEAR
}

model Product {
  id                     String                 @id @default(uuid()) @map("_id") @db.Uuid
  name                   String
  priceInNaira           Int
  filePath               String?
  imagePath              String
  description            String
  isAvailableForPurchase Boolean                @default(true)
  category               ProductCategory
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  orders                 Order[] // existing relation to Order
  downloadVerifications  DownloadVerification[] // existing relation to DownloadVerification
  carts                  Cart[] // Add this relation field
}

model Cart {
  id        String   @id @default(uuid())
  productId String   @db.Uuid
  userId    String?
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
}

model User {
  id        String   @id @default(uuid()) @map("_id") @db.Uuid
  name      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String   @id @default(uuid()) @map("_id") @db.Uuid
  pricePaidInNaira Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId    String  @db.Uuid
  productId String  @db.Uuid
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id        String   @id @default(uuid()) @map("_id") @db.Uuid
  expiresAt DateTime
  createdAt DateTime @default(now())
  productId String   @db.Uuid
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}
